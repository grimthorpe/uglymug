$Name:  $

Tag file.

Lists the tags and the broad changes made.
Please update everytime a new release goes live on the main game. This way we
can always pull out the correct version. In reverse order.
Leave the Name: tag at the top of the file to get the correct release tag
embedded in the game when you build it.
Add an entry into UglyMUG's UMS (Topic: UM Version) for the release as well.

Addendum: As you commit code, please put information about the changes in above
the latest release tag. That way if someone else does a release, the change
information doesn't get lost.


	Fixed up more BUG logs to use log_bug instead of fprintf/fputs
	More updates to the String code; this time get the buffer sharing done right for empty strings.
	Most of the set-commands had the wrong error message saying that you couldn't do something because the object is ReadOnly when it wasn't. Fixed to now say if it is ReadOnly if the object is set ReadOnly, otherwise give the standard Permission Denied.
	Fixed the examine code so that Players in a contents list get shown in the colour of their rank, not the room's rank.
	Added 'noflush' option to @terminal to stop <Output Flushed> happening.
	email.list generation is semi-atomic; at least it has been reduced to a race condition of the file not being there, rather than writing to it while the log handler uses it.
	@gc doesn't try to report Weapon, Armour and Ammunition as destroyed, even though they don't exist any more.
	match_variable_list now returns the *FIRST* matching variable instead of the last.
	Made semicolon_string_match return FALSE if what you're searching for is an empty string.
	Added missing # to hack message
	Added log_boot() and changed the call in context::do_boot() accordingly
	Made @terminal follow the 'Silent' flag rules, rather than just being silent when run from a softcode command.
	More changes to @remote; this time keep processing the remoted command until completion.
	Modified log_hack to take the 'target' of the hack. If there is no target, use GOD_ID instead.
	Made .reconnect be run *BEFORE* the descriptors are swapped around in the list so any @terminal commands will work on the latest connection.
	Cleaned up descriptor_data so that there is a 'terminal' structure (rather than naming everything terminal_foo).
	Cleaned up hostname handling so we don't use strdup, and then put the result into a String.
	Removed all of the '#ifndef NEW_LOGGING' blocks containing old Trace()/fputs() calls.
	Removed (old) context::log_recursion function and prototypes
	Added missing log_recursion() call in context.c
	Changed @decompile so that it's no longer wizard-only. you can @decompile if you have controls_for_write().
	Added log_reconnect
	Added log_halfquit() and changed log call in interface.c
	Added RECORD_START and RECORD_END to a case for log_disconnect (never connected). Now it should go into the DISCONNECT log.

um1_033 - Grimthorpe (mainly) and Chisel fixes his code...
	Removed some more value_or_empty calls by converting stuff into CString/String.
	Match code: match_exit_remote now checks if the target type supports exits before trying to use the exit list.
	Removed call to value_or_empty on a CString on log_recursion()
	Added .reconnect handling (runs when you RECONNECT)
	Cleaned up .login/.logout handling (share common code)
	More changes of char* -> String, this time in Command_and_arguments (and related)
	Cleaned up @terminal, removed the never-working 'SET' command
	Cleaned up checks for gagged_command()
	Made the Player recall buffer only be created when its used.
	Fix csucc/cfail Silent commands to be silent again.

um1_032 - Grimthorpe and Chisel; Chisel cleans up his mess while Grimthorpe adds to it.
	Added DNS caching (up to 256 entries at the moment), to reduce the number of hangs we get when people connect and there isn't a decent DNS server.
	Removed all of the combat stuff.
	Added @warn, that displays an error message, unless the command chain is SILENT.
	Added value_or_empty() around get_arg1() and get_arg2() in log_hack call in game.c


um1_031 - The Grimthorpe and Chisel show.
	Added log.h and logging functions to log.c
	Added NEW_LOGGING to config.h
	Wrapped all old logging (Trace(...), fputs(stderr,...)) in #ifndef NEW_LOGGING; old logging is deprecated but
	left for reference until new logging is 'proven'.
	Put all new logging (log_...()) into #else for the #ifndef NEW_LOGGING
	Made log messages (for bugs, etc) more verbose
    Added @terminal as an alternative to 'set'; 'set' should be deprecated
    and removed soon.
    Added @terminal recall option; you can choose to turn it off.
    Added @recall clear to clear all entries in the recall buffer.
    @return can now return an empty value.
    @colour *player works.
    Added @terminal effects option; Does the effects but not the colour. (Set yourself !colour)
    Added @terminal halfquit option; Automatically does HALFQUIT if you do a client-side disconnect without a 'QUIT'.
    Added @?terminal (but no real implementation yet).
    Cleaned up notify_wizard_foo so that it is unconditional again.
    Added a remembered 'gagged_command' status to the call stack.
    Cleaned up @truncate slightly
    Added support for '@?terminal type'.
    Deprecated '@terminal termtype' for '@terminal type' (but 'termtype' still works)
    Cleaned up the SMD code so that we don't care about the (never implemented) JANET network lookup.
    Added a new implementation of 'String', which should give us lots of flexibility in the future, when we want to do fun things with strings and string buffers.

um1_030 - Chisel; fixed showstopper with HALFQUIT
    Fixed the Trace() call for HALFQUIT so that it doesn't try to use
    now->foo, when now hasn't been initialised.

um1_029 - Chisel; semi-emergency release to ReadOnly can be unset
    Changed the ReadOnly flag so that it can be unset.
    Added 'HALFQUIT' so you can drop your connection for up to 5 minutes
    and reconnect as if you didn't.
    Finally fixed @remote so that it works properly;

um1_028 - Grimthorpe, emergency release due to the NPC bug.
    Cleaned up the @recall code so that it uses 'String' instead of char*
    Fixed NPC code in queue_string so that it escapes $, \ and {.
    @recursionlimit can be used by Apprentices to increate the recursion limit
    @remote *player works like @teleport *player, so that you go to the room
    that the player is in.
    Massive database code cleanup; we no longer support 'ALPHA' format dumps.
    @broadcast (and supporting functions) have been removed.
    Cleaned up set.c slightly; When setting the READONLY flag, do the check
    before messing with the flag.
    Reconnections are now announced as [foo has reconnected].
    notify_wizard_unconditional has been removed from interface.c as the
    first part of tidying up the code; All notify_wizard output goes to
    all wizards, even if they are haven.

um1_027
    Altered so second connection replaces first.
    Altered @recall to default to 50 if num_lines not recognised.
    Sort-of fixed the censorship code so that it doesn't hang the game under
    certain circumstances. I've no idea why it could have got into the state
    it was, but it wont happen again.
    Fixed the error message on '.startup' commands to say who owns it, and
    which command it is.

um1_026 - Grimthorpe, Reaps - tagged by Reaps
    Made @email, @alias and @unalias write out the email address list
    each time they are used.
    Allowed XBuilder to increase recursion limit up to Wiz limit
    Added @recall - set default to 400 lines
    Fixed the censorship code so that '<rudeword1><rudeword2>' is now output
    as '**********************' instead of '***********<rudeword2>'
    Made swho work out how many entries to display properly.
    Added @?version which returns the Release string (eg um1_026)
    Made WelcomerTitles modifiable; Don't know exactly how, don't know why
    it didn't work before.
    Modified String::clear to be String::empty because of a macro definition
    in curses.h (clear->wclear(X)). Changed all (1) reference outside of
    mudstring.h

um1_025 - Grimthorpe; tagged by Chisel
    When a new player is created, it executes ALL the commands in PLAYER_START
    (usually #3) called .create
    Fixed beep(player) so that it only sends the beep to the specific player
    Fixed @colour so the message that an attribute is set is the right
    way around

um1_024 - Grimthorpe
    Undo the change in look.c so you can see inside a container again.

um1_023 - Grimthorpe
    Tidied up the alarm code; can't remember what I was trying to fix...
    Changed Boolean->bool, True->true, False->false to keep with Standard C++.
    If .enter destroys the room you've just moved to, don't do the look.
    @welcomer works for real-id welcomer as well as effective-id welcomer.
    The connection code specifically looks for 'connect' or 'create', or
    a prefix of them. If not found, it uses the *ENTIRE* input as a name
    or password.
    Made the word-wrap closer to TinyFugue so we don't get horrible-looking
    word-wrap.
    Censorship now ignores colours.
    Added WelcomerTitles as a colour attribute.

um1_022 - Grimthorpe
    Oh dear, @name & @alias forgot about the player cache. It is now bypassed
    until I can find a better way of dealing with it.
    @if/@for/@with ignore leading spaces (just like the command handler does)
    interface.c tidyup.

um1_021 - Grimthorpe
    We don't prompt for a password on connection if the player doesn't have one
    Open a list of ports to accept connections on
    @newpass will accept an empty password.
    Added @?can <object> = [read|write|link|jump]

um1_020 - Grimthorpe
    Bug: Sticky fuses could hit nasty recursion (stack-blower). Fixed.
    @name & @alias: You can have a name that is one of your aliases, and
    an alias that is your name.
    @channel: The 'silent @channel' code seemed to be missed last time.

um1_019 - Grimthorpe
    Collection of updates:
    Stop the game crashing if we get an almost-empty string after expanding
    variables.
    Stop the game making noise with @channel if run from a Silent softcode
    command.
    Fix 'scat' so that it works on SysV derived UNIX platforms.

um1_018 - Grimthorpe
    More egg on face. string_match had a NULL string check the wrong
    way around.

um1_017 = Grimthorpe
    Egg on face time. @<softcodecommand> didn't work due to the fix.

um1_016 - Grimthorpe
    More string stuff, this time finishing off the stringutil.c stuff.
    Also, |foo should now check #4 for 'foo', as it used to.

um1_015 - Grimthorpe
    A huge change.
    The next part of the 'convert everything to String/CString'.

um1_014 - Grimthorpe
    The perils of extreme programming. If you find a bug in one piece of code,
    check to see if there are any others nearby. @channel leave was the problem.
    Also someone found a 'new' bug! NULL pointers being used again...

um1_013 - Grimthorpe
    Nasty bug in the chat code; instead of iterating over the list with x-next()
    I used x++ instead...
    Also, the version string gets dumped to stderr rather than stdout so that
    we know where the logs came from.

um1_012 - Grimthorpe
    Second attempt at fixing '@endif' locking problem. We weren't flushing
    the parser cache.

um1_011 - Grimthorpe
    @channel / chat cleaned up and 'fixed'.
    You can also set a channel as censored.
    '[xxx has connected]' now comes out in colour, is better written,
    and generally better.
    First attempt at fixing '@endif' locking problem.

um1_010 - Grimthorpe
    Not really a major change, but now we have the release tag in the code
    done properly, as long as everyone remebers to edit the top line of this
    file. I suppose I could automate it with a Name CVS tag...

um1_009 - Grimthorpe
    Private channels: Wizards can override private channel settings, in case
    of error. Please do not abuse it.
    DONTANNOUNCE: A new flag (DontAnnounce) to stop the [xxx has connected]
    announcements
    Julian's updates: Julian has tidied up the code (again) to make it more
    cross-platform.

um1_008 - Grimthorpe
    Bug fix 1 for String code: Array_storage::insert_element was totally
    bogus. This is now fixed(tm)

um1_007 - Grimthorpe
    Awooga Awooga Awooga. Red Alert, Shields Up.
    Be prepared for almost immediate roll-back to release um1_006 on live
    systems, while furtive hackers try to fix the bugs found.
    Yes, the first part of the string-replacement code is going in.
    Be afraid. Very afraid.

um1_006 - Grimthorpe
    At last, a way of identifying which tag was used to get the source out.

um1_005 - Grimthorpe
    A few more null pointer fixes.
    Note: These should all go away when the major code update goes in.
    But we're waiting on Keith's HALFQUIT (and related) stuff before that
    can go in.

um1_004 - Grimthorpe
    Yet more null pointer fixes. One day we'll fix them all, or replace
    either vsprintf or the use of char* for strings.

um1_003 - Grimthorpe
    Not sure of the changes. If you could fill
    some in Grim...
    Well, lets start with NULL pointer protection, followed by a liberal
    sprinkling of value_or_empty, add a little NULL pointer protection
    and heat for a few hours before topping off with a stupid strdup/free
    (real bug) fix.

release_002 - Reaps
    Set the UNCONNECTED idle limit to 5 mins

release_001 - Reaps
    Removed all the words from the idle and connect
	times except for Muddict which happens
	between 8 and 9 hours connect.
    Made all times cope with weeks of connect/idle
	including the idle message from pages.

