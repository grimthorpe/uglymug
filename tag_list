$Name:  $

Tag file.

Lists the tags and the broad changes made.
Please update everytime a new release goes live on the main game. This way we
can always pull out the correct version. In reverse order.
Leave the Name: tag at the top of the file to get the correct release tag
embedded in the game when you build it.
Add an entry into UglyMUG's UMS (Topic: UM Version) for the release as well.
(see ums_release_template.txt for how to do this)

Addendum: As you commit code, please put information about the changes in above
the latest release tag. That way if someone else does a release, the change
information doesn't get lost.

	Supress wisps of smoke in rooms where drop message exists. (Lee TC)
	Removed the new language and added support for lua instead. (Grimthorpe)
	Fixes do_query_mass/volume/etc to work with puppets. (Lee TC)
	Fixed puppets to have normal player mass/volume/limits when created
(Lee TC)
	Fixed the look code so you can see things that you carry again (Grimthorpe)
	Fixed the code so it compiles under GCC v4.0.1. (Grimthorpe)
	Started to add the new language - it'll probably change lots (Grimthorpe)
	Started to add create-on-write for inherited properties (Grimthorpe)
	Fixed @force so that you can't blow up the stack. (Grimthorpe)
	Fixed @?colour to use the new style cia_table for-loop instead of the old one (Grimthorpe)

um1_061
	Added #include <ctype.h> to colour.c
um1_060
	Overhauled the colour code. (Grimthorpe)
	Stopped the game crashing if an object is destroyed whilst its lock is being evaluated (Grimthorpe)
	Get the db load code to accept any number of flag bytes up to the current maximum (Grimthorpe)
	Fixed @parent so it sets the Referenced flag on the parent. (Grimthorpe)
	Fixed @destroy so it checks if the object is a parent. (Grimthorpe)

um1_059
	Added @channel notify so that operators can notify the channel with any message (Grimthorpe)
	Tidied up the code so that we use enums instead of #define, and fixed all
	the compilation errors. (Grimthorpe)
	Got the channel code to respect DontAnnounce. (Grimthorpe)

um1_058
	Avoid crashing in some of the colour code. (Grimthorpe)
	Provide output command info for wMug and other uses. (Grimthorpe)

um1_057
	Prevented mortals being able to 'look' at any item in the db.

um1_056
	Allowed NPCs to carry Thing objects. (canis)
	Large changes to interface.c. Be afraid. (Grimthorpe)
	Stop censored channels from screwing up output by players set CensorAll.
	Reduce the HACK alerts for commands located via global player name.
	Put in support for using PCRE library. Should auto-detect it and build appropriately.
	Re-set SO_REUSEADDR on listening sockets so we can restart the game quickly.

um1_055
	Added a new terminal setting colour_terminal. If unset then game will not
	output colour. Set to false automatically if you come in through the
	Java Web port.
	Re-fix the censorship code so that it is case-insensitive again.
um1_054
	Fix the censorship code.
	Forward all the NOTHING logs to EMAIL_GODS.
	Stopped all god-power flags from being set in a command.

um1_053
	Fixed Accessed(), Modified(), Created() to check if the object is not nothing. (Grimthorpe)
	Removed PRIVATE flags from Players & Puppets. (Grimthorpe)
	Changed examine so that you always get the item name (and #id if appropriate) (Grimthorpe)
	Started to fix @recall
	Added 'Private' flag: Descriptions of objects set private should only be visible by their owner/effective owner (Grimthorpe)
	Replaced most of GOD_ID's functionality with 7 flags. (Grimthorpe)
	Fixed @with with dictionaries. (Grimthorpe)

um1_052
	Actually committed code for mortals to see IDs there are a number of
	issues with this but we can work them out later.
	Fixed @with with arrays (Grimthorpe)
um1_051
	Changed @with to take a copy of the data in the dictionary / array so it doesn't get affected by changes in the loop (Grimthorpe)
	Changed @?id not to require controls_for_read
	Added @?stepsleft - tell us how many steps we have left before the
commadn will exit.  It _is_ effectively a recursion however, in that you can
execute any number of commands within a command, but if those commands take
execute another command then the number decreases... A bit naff actually, but
@?stepsleft will report the correct value that the game uses to decide whether
to keep executing commands.  JPK
	Don't modify atime in @csucc or @cfail if we're not linking to anything.  D'oh.  IJC
	Fix for SNDLOC recognition code, and a couple of byte-ordering bugs.  IJC
	Permit ISO-8859-15 characters to be used for everything except player names.  IJC
	Added drogna list and sort to trawl
	Stop do_examine from changing atime on objects.  IJC
	Modified do_at_garbage_collect to account players/NPCs money to GOD_ID.  DJT: 20031105
	Added create, modify and access timestamps.  IJC
	fixed giver/taker order in sall to log_debit(). CCW 20031126

um1_050
	Altered set.c to not allow you to give or take money from things other than players and puppets.

um1_049
	Altered do_at_debit not to work in commands and only to work under
		controls_for_write
	Modify tell code to miss out a space before an apostrophe ("Flup's a pedant" rather than "Flup 's").  IJC
	Add 'years' output to time_string().  IJC
	Make it impossible for wizards and apprentices to go cash negative.  Just God.  JPK

	Added Puppet as an allowed type to do_query_commands in get.c. LEETC
	Modify @stats to include currency and BPs after object stats. DJT: 20030826

um1_048
	Ozzard's changes to allow #id's to be used anywhere.

um1_047
	Added a small fix to the @remote code.

um1_046
	Made effective GOD_ID able to boot anyone (so we can have boot commands)
	Added a flag that allows people to turn off the email forwarding
	system on something.

um1_045 - Emergency release for alarm-based crashes
	Changed @remote so that it only pretends to move you. This may need fixes later on as we discover the side-effects. (Grimthorpe)
	Altered do_at_location (teleport code) so that it's possible to teleport Things to a Wizard owned room in a wiz-chpid. (CCW)
	Added a pointer to ums_release_template.txt in the tag_list comments. (CCW)
	Major changes to the make procedure, plus documentation in README, COMPILING, PORTING. (PJC)
	Some alterations to start getting documentation into Doxygen (www.doxygen.org). (PJC)
	Removed stack.[ch], memory.[ch] - necessitating some fixes to pushing jobs. (PJC)
	Made the string maps (player names, command names) compare strings with a hash function before using a string compare, which should be significantly faster. (Grimthorpe)
	Stopped the compound command code from going stupidly recursive. (Grimthorpe)
	Stopped destroying the room an alarm's owner is in from crashing the game (Grimthorpe)

um1_044 - Time to roll in some more fixes
	Added log_credit() function. (CCW)
	Removed extra # from log_create() output. (CCW)
	Added 'who here' as one of the available who special keywords. (CCW)
	Stopped players from attempting to move to 'NOTHING' (Grimthorpe)
	Fixed can_move so that it checks that the object is an exit (Grimthorpe)
	Changed @force to use the 'new style' context nesting (Grimthorpe)
	Fixed @who so that it can't crash the game when called from a command using @force. (Grimthorpe)
	Added 'LiteralInput' flag for people who don't want to use $ and {} expansion when they type commands (Grimthorpe)
	Fixed the 'who' list so that the B flag isn't shown for wizard/apprentices/retired (Grimthorpe)
	Added a template for adding Change Info to UMS in the game. (CCW)

um1_043 - For a retired person he's working too much.
	Fixed the player name cache so that it removes players when they are destroyed.
	Added a command cache on each object that should improve the speed of things.
	Fixed up 'who' and 'swho' to use the right colours
	Produce a HACK log when a retired wizard connects.

um1_042 - I thought Grimthorpe had retired...
	Coloured Retired players bright-blue.
	Re-implemented the player-list, so name lookups should be faster now.
	Got rid of the free object list, as it is easier to just search for the first free object.
	Added @channel list = #channelname
	Added the 'Retired' flag. It hides the Wizard/Apprentice flags in unparse_object and 'who'.
	Modified 'who' so that it displays the 'X' flag for Wizards & Apprentices that are set XBuilder (compare to Welcomer flag). It never shows for GOD, but if required can be changed easily.
	Fixed @boot so that if the target doesn't exist we don't crash the game.
	Changed get code (do_get) so you can't get things from other players (aka theft).
	Changed drop code (do_drop) so you can only drop things that you are carrying.
	  This prevents "drop here:object" and "drop <player>:object" which are just silly.
	Changed teleport code (do_at_location) to let players teleport their puppets and NPCs
	Changed idle-message from "...who has been inactive for 3 minutes." to "...who has been inactive for 3 minutes:". It's just slightly nicer.
	Modified @?hardcodecommands to use String concatenation.
	Implemented @?my name, to return the name that the current command was called as.
	Commands locked against a player no longer stop the search for a useable command.
	Changed @for so that if the step is 'the wrong way' we ignore it silently (so that @for i=1 to 0 step 1 will do nothing, rather than bug out)
	Fixed @with so that it doesn't run the contents of the loop if the array or dictionary is empty.
	Re-added the 'help' hardcode command to make the game engine consistant.
	.leave can no longer go infinitely-recursive any more.

um1_041 - SWho did you mean?
	Fixed swho so that it dumps the output to the user that requested
	it, rather than the intended players to list.

	added #include <string.h> to mudstring.c to help it compile on 
	non-solaris

	Allow god to boot wizards without having to set them !W first..

	Added port information in interfaces.c, thus WebGW and TelnetGW
	connections are labelled to be set host.

	Changed victim from char* to String in dump_users. Probable cause of crashes in 040
	Grimthorpe: Changed it back and fixed class WhoToShow instead.
	Modified interface to fic a small bug where we used NULL instead of \0

um1_040 - New characters are important to us!
	Modified log_recursion() and the two callsa to it. This makes the information easier to process.
	Modifed String so that you can append to it; just use +=
	Modified @?connectedplayers so that it takes parameter as who does. npc
wizards, admin, etc
	Added MAX_NAME_LENGTH, and used in two obvious places
	Modified @?connectedplayers, who, swho so they all use class WhoToShow to determine who should be shown.
	Modified @?connectedplayers to use String append.
	Fixed the peak users store in 'who' so that it only does it for users, not npcs.
	Fixed character creation so that the password hiding is done the right way around.


um1_039 - ARGH!
	Changed around @?connectedplayers in the command list so that it is in the right place.

um1_038 - Stopped silly wizards from crashing the game with @gc
	Did a large tidyup; still a bit more to do in interface.c, but all the rest of the code compiles cleanly with -Weffc++
	Fixed @gc so that when you destroy the puppets it doesn't crash the game.
	Fixed create_player so that it will deal with blank passwords properly.
	Added @?hardcodecommands which returns a list of hardcoded commands

um1_037 - Back to stability perhaps?
	Added an (optional) debugging version of dbref selectable via a #define and made the code compatible with both the normal dbref and the debugging one
	Made Compound_command_and_arguments intialise the 'player' dbref.
	Removed the debugging message from the context constructor.
	Added regexp argument to @recall to allow conditional recalling of stuff syntax: @recall [<number>][=[<regexp>]].

um1_036 - Bug stopping time.
	Stopped the recursion logging from crashing the game.
	Removed the final bits of weapon code from the player object.
	Improved the Natter flag setting process; checks controls_for_write, and if the target is a Wizard or Apprentice.
	Added check to do_chat() so that Silent players can't chat on channels. (This was missed many moons ago)
	Added missing # to id's printed in log_hack() call in game.c.

um1_035 - Not very well tested.
	Finally implemented all of @?terminal
	Converted all of the standard strings in the game to be Strings.
	Changed all CString to String, since we don't have a CString any more.
	Added @error for completeness in the hardcode
	The chat channels now act as a public place, so if you are set CensorPublic they get censored, unless the channel is set private. If a channel is set censored, then everything on it is censored.
	Allowed @pcreate to create players without a password, for the guest system.
	Fixed up the String code so that it doesn't crash trawl on shutdown.
	First attempt at making the Makefile truly cross-platform without having to edit it every time you get a new copy from CVS.
	The email.list temporary file gets removed after use now.
	Modified the character connection/creation process in interface.c so that it strips leading and trailing white space from the input.


um1_034 - Some people did some changes.
	Even more updates to the String code; We're going live with 'String' and 'StringBuffer', a nice combination of powerful manipulation and data sharing.
	Updated the Recall code so that all the buffers are only created when required.
	Fixed up more BUG logs to use log_bug instead of fprintf/fputs
	More updates to the String code; this time get the buffer sharing done right for empty strings.
	Most of the set-commands had the wrong error message saying that you couldn't do something because the object is ReadOnly when it wasn't. Fixed to now say if it is ReadOnly if the object is set ReadOnly, otherwise give the standard Permission Denied.
	Fixed the examine code so that Players in a contents list get shown in the colour of their rank, not the room's rank.
	Added 'noflush' option to @terminal to stop <Output Flushed> happening.
	email.list generation is semi-atomic; at least it has been reduced to a race condition of the file not being there, rather than writing to it while the log handler uses it.
	@gc doesn't try to report Weapon, Armour and Ammunition as destroyed, even though they don't exist any more.
	match_variable_list now returns the *FIRST* matching variable instead of the last.
	Made semicolon_string_match return FALSE if what you're searching for is an empty string.
	Added missing # to hack message
	Added log_boot() and changed the call in context::do_boot() accordingly
***
*
* Note - do_boot renamed to do_at_boot on Apr 11 2002 by JPK
*
***
	Made @terminal follow the 'Silent' flag rules, rather than just being silent when run from a softcode command.
	More changes to @remote; this time keep processing the remoted command until completion.
	Modified log_hack to take the 'target' of the hack. If there is no target, use GOD_ID instead.
	Made .reconnect be run *BEFORE* the descriptors are swapped around in the list so any @terminal commands will work on the latest connection.
	Cleaned up descriptor_data so that there is a 'terminal' structure (rather than naming everything terminal_foo).
	Cleaned up hostname handling so we don't use strdup, and then put the result into a String.
	Removed all of the '#ifndef NEW_LOGGING' blocks containing old Trace()/fputs() calls.
	Removed (old) context::log_recursion function and prototypes
	Added missing log_recursion() call in context.c
	Changed @decompile so that it's no longer wizard-only. you can @decompile if you have controls_for_write().
	Added log_reconnect
	Added log_halfquit() and changed log call in interface.c
	Added RECORD_START and RECORD_END to a case for log_disconnect (never connected). Now it should go into the DISCONNECT log.

um1_033 - Grimthorpe (mainly) and Chisel fixes his code...
	Removed some more value_or_empty calls by converting stuff into CString/String.
	Match code: match_exit_remote now checks if the target type supports exits before trying to use the exit list.
	Removed call to value_or_empty on a CString on log_recursion()
	Added .reconnect handling (runs when you RECONNECT)
	Cleaned up .login/.logout handling (share common code)
	More changes of char* -> String, this time in Command_and_arguments (and related)
	Cleaned up @terminal, removed the never-working 'SET' command
	Cleaned up checks for gagged_command()
	Made the Player recall buffer only be created when its used.
	Fix csucc/cfail Silent commands to be silent again.

um1_032 - Grimthorpe and Chisel; Chisel cleans up his mess while Grimthorpe adds to it.
	Added DNS caching (up to 256 entries at the moment), to reduce the number of hangs we get when people connect and there isn't a decent DNS server.
	Removed all of the combat stuff.
	Added @warn, that displays an error message, unless the command chain is SILENT.
	Added value_or_empty() around get_arg1() and get_arg2() in log_hack call in game.c


um1_031 - The Grimthorpe and Chisel show.
	Added log.h and logging functions to log.c
	Added NEW_LOGGING to config.h
	Wrapped all old logging (Trace(...), fputs(stderr,...)) in #ifndef NEW_LOGGING; old logging is deprecated but
	left for reference until new logging is 'proven'.
	Put all new logging (log_...()) into #else for the #ifndef NEW_LOGGING
	Made log messages (for bugs, etc) more verbose
    Added @terminal as an alternative to 'set'; 'set' should be deprecated
    and removed soon.
    Added @terminal recall option; you can choose to turn it off.
    Added @recall clear to clear all entries in the recall buffer.
    @return can now return an empty value.
    @colour *player works.
    Added @terminal effects option; Does the effects but not the colour. (Set yourself !colour)
    Added @terminal halfquit option; Automatically does HALFQUIT if you do a client-side disconnect without a 'QUIT'.
    Added @?terminal (but no real implementation yet).
    Cleaned up notify_wizard_foo so that it is unconditional again.
    Added a remembered 'gagged_command' status to the call stack.
    Cleaned up @truncate slightly
    Added support for '@?terminal type'.
    Deprecated '@terminal termtype' for '@terminal type' (but 'termtype' still works)
    Cleaned up the SMD code so that we don't care about the (never implemented) JANET network lookup.
    Added a new implementation of 'String', which should give us lots of flexibility in the future, when we want to do fun things with strings and string buffers.

um1_030 - Chisel; fixed showstopper with HALFQUIT
    Fixed the Trace() call for HALFQUIT so that it doesn't try to use
    now->foo, when now hasn't been initialised.

um1_029 - Chisel; semi-emergency release to ReadOnly can be unset
    Changed the ReadOnly flag so that it can be unset.
    Added 'HALFQUIT' so you can drop your connection for up to 5 minutes
    and reconnect as if you didn't.
    Finally fixed @remote so that it works properly;

um1_028 - Grimthorpe, emergency release due to the NPC bug.
    Cleaned up the @recall code so that it uses 'String' instead of char*
    Fixed NPC code in queue_string so that it escapes $, \ and {.
    @recursionlimit can be used by Apprentices to increate the recursion limit
    @remote *player works like @teleport *player, so that you go to the room
    that the player is in.
    Massive database code cleanup; we no longer support 'ALPHA' format dumps.
    @broadcast (and supporting functions) have been removed.
    Cleaned up set.c slightly; When setting the READONLY flag, do the check
    before messing with the flag.
    Reconnections are now announced as [foo has reconnected].
    notify_wizard_unconditional has been removed from interface.c as the
    first part of tidying up the code; All notify_wizard output goes to
    all wizards, even if they are haven.

um1_027
    Altered so second connection replaces first.
    Altered @recall to default to 50 if num_lines not recognised.
    Sort-of fixed the censorship code so that it doesn't hang the game under
    certain circumstances. I've no idea why it could have got into the state
    it was, but it wont happen again.
    Fixed the error message on '.startup' commands to say who owns it, and
    which command it is.

um1_026 - Grimthorpe, Reaps - tagged by Reaps
    Made @email, @alias and @unalias write out the email address list
    each time they are used.
    Allowed XBuilder to increase recursion limit up to Wiz limit
    Added @recall - set default to 400 lines
    Fixed the censorship code so that '<rudeword1><rudeword2>' is now output
    as '**********************' instead of '***********<rudeword2>'
    Made swho work out how many entries to display properly.
    Added @?version which returns the Release string (eg um1_026)
    Made WelcomerTitles modifiable; Don't know exactly how, don't know why
    it didn't work before.
    Modified String::clear to be String::empty because of a macro definition
    in curses.h (clear->wclear(X)). Changed all (1) reference outside of
    mudstring.h

um1_025 - Grimthorpe; tagged by Chisel
    When a new player is created, it executes ALL the commands in PLAYER_START
    (usually #3) called .create
    Fixed beep(player) so that it only sends the beep to the specific player
    Fixed @colour so the message that an attribute is set is the right
    way around

um1_024 - Grimthorpe
    Undo the change in look.c so you can see inside a container again.

um1_023 - Grimthorpe
    Tidied up the alarm code; can't remember what I was trying to fix...
    Changed Boolean->bool, True->true, False->false to keep with Standard C++.
    If .enter destroys the room you've just moved to, don't do the look.
    @welcomer works for real-id welcomer as well as effective-id welcomer.
    The connection code specifically looks for 'connect' or 'create', or
    a prefix of them. If not found, it uses the *ENTIRE* input as a name
    or password.
    Made the word-wrap closer to TinyFugue so we don't get horrible-looking
    word-wrap.
    Censorship now ignores colours.
    Added WelcomerTitles as a colour attribute.

um1_022 - Grimthorpe
    Oh dear, @name & @alias forgot about the player cache. It is now bypassed
    until I can find a better way of dealing with it.
    @if/@for/@with ignore leading spaces (just like the command handler does)
    interface.c tidyup.

um1_021 - Grimthorpe
    We don't prompt for a password on connection if the player doesn't have one
    Open a list of ports to accept connections on
    @newpass will accept an empty password.
    Added @?can <object> = [read|write|link|jump]

um1_020 - Grimthorpe
    Bug: Sticky fuses could hit nasty recursion (stack-blower). Fixed.
    @name & @alias: You can have a name that is one of your aliases, and
    an alias that is your name.
    @channel: The 'silent @channel' code seemed to be missed last time.

um1_019 - Grimthorpe
    Collection of updates:
    Stop the game crashing if we get an almost-empty string after expanding
    variables.
    Stop the game making noise with @channel if run from a Silent softcode
    command.
    Fix 'scat' so that it works on SysV derived UNIX platforms.

um1_018 - Grimthorpe
    More egg on face. string_match had a NULL string check the wrong
    way around.

um1_017 = Grimthorpe
    Egg on face time. @<softcodecommand> didn't work due to the fix.

um1_016 - Grimthorpe
    More string stuff, this time finishing off the stringutil.c stuff.
    Also, |foo should now check #4 for 'foo', as it used to.

um1_015 - Grimthorpe
    A huge change.
    The next part of the 'convert everything to String/CString'.

um1_014 - Grimthorpe
    The perils of extreme programming. If you find a bug in one piece of code,
    check to see if there are any others nearby. @channel leave was the problem.
    Also someone found a 'new' bug! NULL pointers being used again...

um1_013 - Grimthorpe
    Nasty bug in the chat code; instead of iterating over the list with x-next()
    I used x++ instead...
    Also, the version string gets dumped to stderr rather than stdout so that
    we know where the logs came from.

um1_012 - Grimthorpe
    Second attempt at fixing '@endif' locking problem. We weren't flushing
    the parser cache.

um1_011 - Grimthorpe
    @channel / chat cleaned up and 'fixed'.
    You can also set a channel as censored.
    '[xxx has connected]' now comes out in colour, is better written,
    and generally better.
    First attempt at fixing '@endif' locking problem.

um1_010 - Grimthorpe
    Not really a major change, but now we have the release tag in the code
    done properly, as long as everyone remebers to edit the top line of this
    file. I suppose I could automate it with a Name CVS tag...

um1_009 - Grimthorpe
    Private channels: Wizards can override private channel settings, in case
    of error. Please do not abuse it.
    DONTANNOUNCE: A new flag (DontAnnounce) to stop the [xxx has connected]
    announcements
    Julian's updates: Julian has tidied up the code (again) to make it more
    cross-platform.

um1_008 - Grimthorpe
    Bug fix 1 for String code: Array_storage::insert_element was totally
    bogus. This is now fixed(tm)

um1_007 - Grimthorpe
    Awooga Awooga Awooga. Red Alert, Shields Up.
    Be prepared for almost immediate roll-back to release um1_006 on live
    systems, while furtive hackers try to fix the bugs found.
    Yes, the first part of the string-replacement code is going in.
    Be afraid. Very afraid.

um1_006 - Grimthorpe
    At last, a way of identifying which tag was used to get the source out.

um1_005 - Grimthorpe
    A few more null pointer fixes.
    Note: These should all go away when the major code update goes in.
    But we're waiting on Keith's HALFQUIT (and related) stuff before that
    can go in.

um1_004 - Grimthorpe
    Yet more null pointer fixes. One day we'll fix them all, or replace
    either vsprintf or the use of char* for strings.

um1_003 - Grimthorpe
    Not sure of the changes. If you could fill
    some in Grim...
    Well, lets start with NULL pointer protection, followed by a liberal
    sprinkling of value_or_empty, add a little NULL pointer protection
    and heat for a few hours before topping off with a stupid strdup/free
    (real bug) fix.

release_002 - Reaps
    Set the UNCONNECTED idle limit to 5 mins

release_001 - Reaps
    Removed all the words from the idle and connect
	times except for Muddict which happens
	between 8 and 9 hours connect.
    Made all times cope with weeks of connect/idle
	including the idle message from pages.

